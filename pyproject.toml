[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "valhalla"
version = "1.1.0"
description = "An alternative skin server for Minecraft supporting metadata and hd textures"
authors = [
    { name = "Matthew Messinger", email = "mattmess1221@gmail.com" },
]
license = "AGPL-3.0-only"

dependencies = [
    "aiofiles>=24.1.0",
    "aiosqlite>=0.20.0",
    "alembic>=1.14.1",
    "authlib>=1.4.0",
    "boto3>=1.36.6",
    "expiringdict>=1.2.2",
    "fastapi>=0.115.7",
    "fastapi-cli>=0.0.7",
    "uvicorn[standard]>=0.34.0",
    "httpx>=0.28.1",
    "itsdangerous>=2.2.0",
    "pillow>=11.1.0",
    "psycopg[binary]>=3.2.4",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "python-dotenv>=1.0.1",
    "python-jose>=3.3.0",
    "python-multipart>=0.0.20",
    "slowapi>=0.1.9",
    "sqlalchemy[asyncio]>=2.0.37",
]
requires-python = ">=3.13"

[project.urls]
repository = "https://github.com/killjoy1221/ValhallaSkinServer"

[dependency-groups]
test = [
    "coverage>=7.6.10",
    "moto[s3,sts]>=5.0.27",
    "pytest>=8.3.4",
    "pytest-httpx>=0.35.0",
    "pytest-sugar>=1.0.0",
]
dev = [
    "pre-commit>=4.1.0",
]
lint = [
    "ruff>=0.9.3",
]
types = [
    "boto3-stubs[s3,sts]>=1.36.6",
    "mypy>=1.14.1",
    "types-aiofiles>=24.1.0.20241221",
    "types-pillow>=10.2.0.20240822",
    "types-python-jose>=3.3.4.20240106",
]

[tool.pdm]
[tool.pdm.scripts]
dev = "fastapi dev"
test.composite = [
    "coverage run -m pytest",
    "coverage report",
    "coverage xml",
]
lint.composite = [
    "ruff check --fix",
    "ruff format",
]

[tool.coverage]
[tool.coverage.report]
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "@overload",
    "class .*Protocol"
]
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
omit = [
    ".vscode*",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = ["authlib.*", "expiringdict"]
ignore_missing_imports = true

[tool.ruff]
[tool.ruff.lint]
select = [
    "F", "E", "W", "B", "SIM", "I", "ANN", "UP",
    "YTT", "FBT", "ASYNC", "C4", "DTZ",
    "PIE", "RET", "SLF", "TRY", "FLY", "PERF", "RUF"
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
